###
# This is the default TS-setup for tq_seo
#
# (see Section Reference in the manual for more options & parameters)
#
###

## include libs
includeLibs.tx_tqseo_pagetitle = EXT:tq_seo/lib/class.pagetitle.php
includeLibs.tx_tqseo_metatags = EXT:tq_seo/lib/class.metatags.php
includeLibs.tx_tqseo_pagefooter = EXT:tq_seo/lib/class.pagefooter.php
includeLibs.tx_tqseo_http = EXT:tq_seo/lib/class.http.php

includeLibs.tx_tqseo_sitemap_output_txt = EXT:tq_seo_sitemap/lib/sitemap/output/class.txt.php
includeLibs.tx_tqseo_sitemap_output_xml = EXT:tq_seo_sitemap/lib/sitemap/output/class.xml.php


## title tag changer
config.titleTagFunction = user_tqseo_pagetitle->main

## metatags
page {
	headerData.84113002 = USER
	headerData.84113002 {
		userFunc = user_tqseo_metatags->main
	}

	84113002 = USER
	84113002 {
		userFunc = user_tqseo_pagefooter->main
	}
}

# TypoScript added by extension "tq_seo"
plugin.tq_seo =
plugin.tq_seo {
	# Page title generator
	pageTitle =
	pageTitle {
		applySitetitleToPagetitle = {$plugin.tq_seo.pageTitle.applySitetitleToPagetitle}
		applySitetitleToPrefixSuffix = {$plugin.tq_seo.pageTitle.applySitetitleToPrefixSuffix}
		sitetitleGlue = {$plugin.tq_seo.pageTitle.sitetitleGlue}
		sitetitleGlueSpaceBefore = {$plugin.tq_seo.pageTitle.sitetitleGlueSpaceBefore}
		sitetitleGlueSpaceAfter = {$plugin.tq_seo.pageTitle.sitetitleGlueSpaceAfter}
		sitetitlePosition = {$plugin.tq_seo.pageTitle.sitetitlePosition}


		# list of stdWraps for advanced page title manipulations
		stdWrap =
		stdWrap {
			# stdWrap for raw page title (before processing)
			before =
			before {
			}

			# stdWrap for processed page title (after processing)
			after =
			after {
			}
		}

	}

	# Page metatag generator
	metaTags =
	metaTags {
		enableDC = {$plugin.tq_seo.metaTags.enableDC}
		description = {$plugin.tq_seo.metaTags.description}
		keywords = {$plugin.tq_seo.metaTags.keywords}
		copyright = {$plugin.tq_seo.metaTags.copyright}
		email = {$plugin.tq_seo.metaTags.email}
		author = {$plugin.tq_seo.metaTags.author}
		language = {$plugin.tq_seo.metaTags.language}
		distribution = {$plugin.tq_seo.metaTags.distribution}
		rating = {$plugin.tq_seo.metaTags.rating}
		revisit = {$plugin.tq_seo.metaTags.revisit}

		p3pCP = {$plugin.tq_seo.metaTags.p3pCP}
		p3pPolicyUrl = {$plugin.tq_seo.metaTags.p3pPolicyUrl}

		linkGeneration = {$plugin.tq_seo.metaTags.linkGeneration}

		robotsIndex = {$plugin.tq_seo.metaTags.robotsIndex}
		robotsFollow = {$plugin.tq_seo.metaTags.robotsFollow}
		robotsArchive = {$plugin.tq_seo.metaTags.robotsArchive}
		robotsSnippet = {$plugin.tq_seo.metaTags.robotsSnippet}
		robotsOdp = {$plugin.tq_seo.metaTags.robotsOdp}
		robotsYdir = {$plugin.tq_seo.metaTags.robotsYdir}

		geoPositionLatitude = {$plugin.tq_seo.metaTags.geoPositionLatitude}
		geoPositionLongitude = {$plugin.tq_seo.metaTags.geoPositionLongitude}
		geoRegion = {$plugin.tq_seo.metaTags.geoRegion}
		geoPlacename = {$plugin.tq_seo.metaTags.geoPlacename}

		googleVerification = {$plugin.tq_seo.metaTags.googleVerification}
		msnVerification = {$plugin.tq_seo.metaTags.msnVerification}
		yahooVerification = {$plugin.tq_seo.metaTags.yahooVerification}
		wotVerification = {$plugin.tq_seo.metaTags.wotVerification}

		picsLabel = {$plugin.tq_seo.metaTags.picsLabel}

		useLastUpdate = {$plugin.tq_seo.metaTags.useLastUpdate}
		useDetectLanguage = {$plugin.tq_seo.metaTags.useDetectLanguage}
		# canonical tag generator settings
		useCanonical = {$plugin.tq_seo.metaTags.useCanonical}
		useCanonical {
			strict = {$plugin.tq_seo.metaTags.useCanonical.strict}
		}
		useExpire = {$plugin.tq_seo.metaTags.useExpire}

		ieCompatibilityMode = {$plugin.tq_seo.userAgent.ieCompatibilityMode}

		# basic configuration for metatag informations
		conf =
		conf {
			description_page.field = description
			keywords_page.field = keywords
			title_page.field = title
			author_page.field = author
			email_page.field = author_email

			lastUpdate_page = TEXT
			lastUpdate_page {
				data = page:lastUpdated
				stdWrap.ifEmpty.data = register : SYS_LASTCHANGED
				date = c
			}
		}

		# section links (start, up, next, prev)
		sectionLinks =
		sectionLinks {
			prev = HMENU
			prev {
				special = browse
				special {
					items = prev
					prev.fields.title =
				}

				1 = TMENU
				1.NO {
					wrapItemAndSub = {field:uid}
					wrapItemAndSub.insertData = 1
					doNotLinkIt = 1
				}
			}

			next = HMENU
			next {
				special = browse
				special {
					items = next
					next.fields.title =
				}

				1 = TMENU
				1.NO {
					wrapItemAndSub = {field:uid}
					wrapItemAndSub.insertData = 1
					doNotLinkIt = 1
				}
			}
		}

		# list of stdWraps for advanced metatag manipulations
		stdWrap =
		stdWrap {
			# stdWrap for title
			title =
			title {
			}

			# stdWrap for description
			description =
			description {
			}

			# stdWrap for keywords
			keywords =
			keywords {
			}

			# stdWrap for copyright
			copyright =
			copyright {
			}

			# stdWrap for language
			language =
			language {
			}

			# stdWrap for email
			email =
			email {
			}

			# stdWrap for author
			author =
			author {
			}

			# stdWrap for publisher
			publisher =
			publisher {
			}

			# stdWrap for distribution
			distribution =
			distribution {
			}

			# stdWrap for rating
			rating =
			rating {
			}

			# stdWrap for lastUpdate
			lastUpdate =
			lastUpdate {
			}

		}
	}

	# Advanced services (google analytics, piwik ...)
	services =
	services {
		# Google Analytics configuration
		googleAnalytics = {$plugin.tq_seo.services.googleAnalytics}
		googleAnalytics {
			# show google analytics if user is logged in be (default is disable, we don't want to track be-users)
			showIfBeLogin = 0
			anonymizeIp = {$plugin.tq_seo.services.googleAnalytics.anonymizeIp}
			trackDownloads = {$plugin.tq_seo.services.googleAnalytics.trackDownloads}
			trackDownloadsScript = EXT:tq_seo/res/ga-track-download.js
			customizationCode =


			enableIfHeaderIsDisabled  = {$plugin.tq_seo.services.enableIfHeaderIsDisabled}

			## google analytics template code
			template = COA
			template {
				10 = FLUIDTEMPLATE
				10 {
					file = EXT:tq_seo/res/templates/service-ga.html
					variables {
						gaCode = TEXT
						gaCode.field = gaCode

						gaCustomizationCode = TEXT
						gaCustomizationCode.field = gaCustomizationCode

						gaIsAnonymize = TEXT
						gaIsAnonymize.field = gaIsAnonymize
					}
				}
			}
		}

		# Piwik configuration
		piwik =
		piwik {
			# show piwik if user is logged in be (default is disable, we don't want to track be-users)
			showIfBeLogin = 0
			url = {$plugin.tq_seo.services.piwik.url}
			id = {$plugin.tq_seo.services.piwik.id}
			customizationCode =

			enableIfHeaderIsDisabled  = {$plugin.tq_seo.services.enableIfHeaderIsDisabled}

			## piwik template code
			template = COA
			template {
				10 = FLUIDTEMPLATE
				10 {
					file = EXT:tq_seo/res/templates/service-piwik.html
					variables {
						piwikUrl = TEXT
						piwikUrl.field = piwikUrl

						piwikId = TEXT
						piwikId.field = piwikId

						piwikCustomizationCode = TEXT
						piwikCustomizationCode.field = piwikCustomizationCode
					}
				}
			}
		}
	}

	# Sitemap indexer and generator
	sitemap =
	sitemap {
		pagePriority = {$plugin.tq_seo.sitemap.pagePriority}
	}

	# Robots.txt configuration
	robotsTxt =
	robotsTxt {
		# Default robots.txt if no config is found
		default = COA
		default {
			10 = TEXT
			10 {
				value (
User-agent: *
Disallow: /fileadmin/_temp_/
Disallow: /t3lib/
Disallow: /typo3/
Disallow: /typo3_src/
Disallow: /typo3conf/
Disallow: /clear.gif

)
			}

			90 = TEXT
			90 {
				value (
Sitemap: %sitemap%

)
			}
		}


		# Extra robots.txt, will added even if robots.txt is found
		extra = COA
		extra {
		}

		# Robots.txt marker (search/replace, eg. %name%)
		marker =
		marker {
			sitemap = TEXT
			sitemap {
				typolink {
					parameter.data = leveluid:0
					additionalParams = &type=841132
					returnLast = url
				}
			}
		}

	}
}

# TQ-Seo TXT Sitemap
tqSeoSitemapTxt = PAGE
tqSeoSitemapTxt {
	typeNum = 841131

	10 = USER
	10 {
		userFunc = tx_tqseo_sitemap_output_txt->main
	}

	config {
		disableAllHeaderCode = 1
		additionalHeaders = Content-type:text/plain
		xhtml_cleaning = 0

		## disable static documents and stuff
		simulateStaticDocuments = 0
		tx_realurl_enable = 0
		tx_cooluri_enable = 0
		sourceopt.enabled = 0

		## disable indexed search
		index_enable = 0

		## disable features
		insertDmailerBoundaries = 0
		admPanel = 0
		stat = 0
		jumpurl_enable = 0
		debug = 0
		message_preview = #
	}
}


# TQ-Seo XML Sitemap
tqSeoSitemapXml = PAGE
tqSeoSitemapXml {
	typeNum = 841132

	10 = USER
	10 {
		userFunc = tx_tqseo_sitemap_output_xml->main
	}

	config {
		disableAllHeaderCode = 1
		additionalHeaders = Content-type:application/xml
		xhtml_cleaning = 0

		## disable static documents and stuff
		simulateStaticDocuments = 0
		tx_realurl_enable = 0
		tx_cooluri_enable = 0
		sourceopt.enabled = 0

		## disable indexed search
		index_enable = 0

		## disable features
		insertDmailerBoundaries = 0
		admPanel = 0
		stat = 0
		jumpurl_enable = 0
		debug = 0
		message_preview = <!-- -->
	}
}

# TQ-Seo Robots.txt
tqSeoRobotsTxt = PAGE
tqSeoRobotsTxt {
	typeNum = 841133

	10 = USER
	10 {
		userFunc = tx_tqseo_robots_txt->main
	}

	config {
		disableAllHeaderCode = 1
		additionalHeaders = Content-type:text/plain
		xhtml_cleaning = 0

		## disable static documents and stuff
		simulateStaticDocuments = 0
		tx_realurl_enable = 0
		tx_cooluri_enable = 0
		sourceopt.enabled = 0

		## disable indexed search
		index_enable = 0

		## disable features
		insertDmailerBoundaries = 0
		admPanel = 0
		stat = 0
		jumpurl_enable = 0
		debug = 0
		message_preview = #
	}
}
